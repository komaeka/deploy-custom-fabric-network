# ---------------------------------------------------------------------------
# "OrdererOrgs" - 管理排序节点组织的定义
# ---------------------------------------------------------------------------
OrdererOrgs:
    # ---------------------------------------------------------------------------
    # 排序节点
    # ---------------------------------------------------------------------------
    - Name: Orderer
      Domain: example.com
      #  EnableNodeOUs参数用于启用将身份分类为“客户端”或“对等节点”，可以在背书策略或通道配置中使用这些角色
      #  将此项设置为true会在证书目录的msp目录下生成一个config.yaml
      EnableNodeOUs: false

      # ---------------------------------------------------------------------------
      # "Specs" - 完整说明见下文PeerOrgs
      # ---------------------------------------------------------------------------
      Specs:
          - Hostname: orderer

# ---------------------------------------------------------------------------
# "PeerOrgs" - 管理对等节点组织的定义
# ---------------------------------------------------------------------------
PeerOrgs:
    # ---------------------------------------------------------------------------
    # Org1
    # ---------------------------------------------------------------------------
    - Name: Org1
      Domain: org1.example.com
      EnableNodeOUs: false

      # ---------------------------------------------------------------------------
      # "CA"
      # ---------------------------------------------------------------------------
      # 取消本节的注释以启用该组织CA的明确定义。此条目是一个规范。
      # 请参阅下面的“Specs”部分了解详细信息
      # ---------------------------------------------------------------------------
      # CA:
      #    Hostname: ca # implicitly ca.org1.example.com
      #    Country: US
      #    Province: California
      #    Locality: San Francisco
      #    OrganizationalUnit: Hyperledger Fabric
      #    StreetAddress: address for org # default nil
      #    PostalCode: postalCode for org # default nil

      # ---------------------------------------------------------------------------
      # "Specs"
      # ---------------------------------------------------------------------------
      # 取消注释以在配置中启用主机的显式定义。大多数用户会想要使用下面的模板
      #
      # Specs是Spec条目的数组。每个规范条目由两个字段组成：
      #   - Hostname:   (必须) 所需的主机名，不包括域名。
      #   - CommonName: (可选) 指定CN的模板或显式覆盖。默认情况下，这是模板：
      #
      #                              "{{.Hostname}}.{{.Domain}}"
      #
      #   值分别来自Spec.Hostname和Org.Domain。
      #   - SANS: (可选) 指定要在生成的x509中设置的一个或多个主题备选名称。接受模板变量{{.Hostname}}, {{.Domain}}, {{.CommonName}}
      #                 此处提供的IP地址将被正确识别。其他值将作为DNS名称。
      #   注意: 为您创建了两个隐式条目：
      #                     - {{ .CommonName }}
      #                     - {{ .Hostname }}
      # ---------------------------------------------------------------------------
      # Specs:
      #   - Hostname: foo # implicitly "foo.org1.example.com"
      #     CommonName: foo27.org5.example.com # overrides Hostname-based FQDN set above
      #     SANS:
      #       - "bar.{{.Domain}}"
      #       - "altfoo.{{.Domain}}"
      #       - "{{.Hostname}}.org6.net"
      #       - 172.16.10.31
      #   - Hostname: bar
      #   - Hostname: baz

      # ---------------------------------------------------------------------------
      # "Template"
      # ---------------------------------------------------------------------------
      # 允许定义从模板顺序创建的1个或多个主机。默认情况下，它看起来像从0到Count-1的“peer%d”。
      # 您可以覆盖节点数(Count)、起始索引(Start)或用于构建名称的模板(Hostname)。
      #
      # 注意: 模板和规格并不相互排斥。 您可以同时定义这两个部分，并为您创建集合节点。 注意名称冲突
      # ---------------------------------------------------------------------------
      Template:
          Count: 1
          # Start: 5
          # Hostname: {{.Prefix}}{{.Index}} # default
          # SANS:
          #   - "{{.Hostname}}.alt.{{.Domain}}"

      # ---------------------------------------------------------------------------
      # "Users"
      # ---------------------------------------------------------------------------
      # Count: 除管理员外的用户账户数
      # ---------------------------------------------------------------------------
      Users:
          Count: 1

    # ---------------------------------------------------------------------------
    # Org2: 参阅 "Org1 "了解完整规格
    # ---------------------------------------------------------------------------
    - Name: Org2
      Domain: org2.example.com
      EnableNodeOUs: false
      Template:
          Count: 1
      Users:
          Count: 1
